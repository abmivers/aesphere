/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ProcesoCifrarUI.java
 *
 * Created on 27-may-2010, 16:06:21
 */

package aesphere;

import java.io.File;
import javax.swing.JOptionPane;


/**
 *
 * @author antonio
 */
public class ProcesoDescifrarArchivosUI extends javax.swing.JFrame {

    private String cadenaInput;
    private String cadenaKey;
    private String cadenaOutput;
    private MainUI wpadre;
    private int tamanoclave;
    private int blockMode;

    /** Creates new form ProcesoDescifrarUI */
    public ProcesoDescifrarArchivosUI(MainUI padre,String Texto1, String Texto2, 
            String Texto3,int opcionentrada,int opcionkey,int opcionsalida,
            int modoBloque, int tamano) {
        initComponents();
        wpadre=padre;
        cadenaInput = Texto1;
        cadenaKey = Texto2;
        cadenaOutput = Texto3;
        tamanoclave = tamano;
        blockMode = modoBloque;

        //this.setSize(550, 300);

        byte[] salida = new byte[16];

        if (opcionentrada==2 & opcionkey==2){
            salida=descifrarArchivoArchivo();
        }


         if (opcionentrada==2 & opcionkey==1){
            salida=descifrarArchivoHexa();
        }

         if (opcionentrada==2 & opcionkey==0){
            salida=descifrarArchivoTexto();
        }

        

        
        if (salida == null) {
            this.setVisible(false);            
            JOptionPane.showMessageDialog(this, "Error de Descifrado. " +
                    "Compruebe que ha introducido correctamente los datos");
            this.dispatchEvent(new java.awt.event.WindowEvent(this, java.awt.event.WindowEvent.WINDOW_CLOSED));
        } else {
            if (opcionsalida==2) {
                Conversor.byteToFile(salida,cadenaOutput) ;
                
            }
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
   
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AbrirButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("AESphere - Proceso Descifrado");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        AbrirButton.setText("Abrir Archivo");
        AbrirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbrirButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/ok.png"))); // NOI18N
        jLabel2.setText("  La operaci√≥n se ha realizado correctamente ");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(139, 139, 139)
                        .add(AbrirButton))
                    .add(layout.createSequentialGroup()
                        .add(39, 39, 39)
                        .add(jLabel2)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(43, 43, 43)
                .add(jLabel2)
                .add(28, 28, 28)
                .add(AbrirButton)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        wpadre.setEnabled(true);
        wpadre.requestFocus();
        wpadre.wclosed(this);       
    }//GEN-LAST:event_formWindowClosing


    private byte [] descifrarArchivoTexto (){

        int a1 = 0;
        int a2 = 0;
        int a3 = 0;

        switch (tamanoclave) {

            case 128: {
                a1 = 16;
                a2 = 16;
                a3 = 4;
                break;
                }

            case 192: {
                a1 = 16;
                a2 = 24;
                a3 = 6;
                break;
                }

            case 256: {
                a1 = 16;
                a2 = 32;
                a3 = 8;
                break;
                }

        }

        byte [] in = null;

        try {
         in = ReadFileIntoByteArray.getBytesFromFile(new File(cadenaInput));
        }
        catch (Exception e){
            e.printStackTrace();
        }

        byte[] key = Conversor.stringToASCII(cadenaKey);
        if (key.length != a2) key = Conversor.pad(key, a2);

        BlockManager aesenc = new BlockManager(key, a3, 16, false);

        byte[] out = null;
        if (blockMode == 0) out = aesenc.ECB(in, false);
        else if (blockMode == 1) out = aesenc.CBC(in, false);
        
        return Conversor.unpad(out, 16);
    }

   

    private byte[] descifrarArchivoHexa (){

        int a1 = 0;
        int a2 = 0;
        int a3 = 0;

        switch (tamanoclave) {

            case 128: {
                a1 = 16;
                a2 = 16;
                a3 = 4;
                break;
                }

            case 192: {
                a1 = 16;
                a2 = 24;
                a3 = 6;
                break;
                }

            case 256: {
                a1 = 16;
                a2 = 32;
                a3 = 8;
                break;
                }

        }

        byte [] in = null;
        try {
         in = ReadFileIntoByteArray.getBytesFromFile(new File(cadenaInput));
        }
        catch (Exception e){
            e.printStackTrace();
        }

        byte[] key = Conversor.hexStringToByte(cadenaKey);
        if (key.length != a2) key = Conversor.pad(key, a2);

        BlockManager aesenc = new BlockManager(key, a3, 16, false);

        byte[] out = null;
        if (blockMode == 0) out = aesenc.ECB(in, false);
        else if (blockMode == 1) out = aesenc.CBC(in, false);

        return Conversor.unpad(out, 16);
    }

    private byte[] descifrarArchivoArchivo (){

        int a1 = 0;
        int a2 = 0;
        int a3 = 0;

        switch (tamanoclave) {

            case 128: {
                a1 = 16;
                a2 = 16;
                a3 = 4;
                break;
                }

            case 192: {
                a1 = 16;
                a2 = 24;
                a3 = 6;
                break;
                }

            case 256: {
                a1 = 16;
                a2 = 32;
                a3 = 8;
                break;
                }

        }

        byte [] in = null;
        byte [] key = null;
        try {
         in = ReadFileIntoByteArray.getBytesFromFile(new File(cadenaInput));
         key = ReadFileIntoByteArray.getBytesFromFile(new File(cadenaKey));
        }
        catch (Exception e){
            e.printStackTrace();
        }
        
        key = Conversor.pad(key, a2);

      BlockManager aesenc = new BlockManager(key, a3, 16, false);

      byte[] out = null;
      if (blockMode == 0) out = aesenc.ECB(in, false);
      else if (blockMode == 1) out = aesenc.CBC(in, false);

      return Conversor.unpad(out, 16);
    }



    private void AbrirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbrirButtonActionPerformed

        try {
            Process proceso = Runtime.getRuntime().exec(cadenaOutput);

        }

        catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ha ocurrido un error al intentar abrir el archivo "+cadenaOutput);

        }

    }//GEN-LAST:event_AbrirButtonActionPerformed

    /**
    * @param args the command line arguments
    */
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AbrirButton;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables

}
